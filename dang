#!/bin/sh

[ ! -z "$DEBUG_APM" ] && set -x

trap 'kill 0' INT TERM EXIT

readonly ARGS="$@"
readonly SCRIPT="$(perl -MCwd -e 'print Cwd::abs_path shift' `which $0`)"
readonly SCRIPTDIR="$(dirname $SCRIPT)"

: ${CONFFILE:=$HOME/.dangrc}
: ${APM_BUNDLE:=$HOME/code/apm_bundle}
[ -f $CONFFILE ] && . $CONFFILE

readonly PROPERTY_DIR="${APM_BUNDLE}/apps/property"
readonly SCRIPT_NAME="$(basename "$0")"
readonly CAPITALIZED_SCRIPT_NAME="$(perl -e 'print ucfirst shift' $SCRIPT_NAME)"

trap 'kill 0' INT TERM EXIT

function restart_with_launchctl() {
  local process_name="$1"; shift
  local job_name="$1"; shift
  local started_condition="$1"; shift

  launchctl stop $job_name
  printf "Waiting for $process_name to die. Maybe you should grab a beer."
  wait_for_false "pgrep -f $process_name"

  launchctl start $job_name
  if [ ! -z "$started_condition" ]; then
    printf "Waiting for $process_name to start. Again."
    wait_for_true "$started_condition"
  fi
}

function wait_for_true() {
  local condition="$1"; shift
  while ! (eval "$condition" &>/dev/null); do
    printf '.'
    sleep 0.5
  done
  echo
}

function wait_for_false() {
  local condition="$1"; shift
  while (eval "$condition" &>/dev/null); do
    printf '.'
    sleep 0.5
  done
  echo
}

function reindex_solr() {
  cd "$PROPERTY_DIR"
  rake solr:reindex
}

function version() {
  cat "${SCRIPTDIR}/VERSION"
}

function print_help() {
  local return_code=$1; shift

  printf "dang! $(version) - Quick fixes for common frustrations

Usage: $SCRIPT_NAME task

Tasks:
  mysql      - Restart MySQL
  selenium   - Restart Selenium
  solr       - Re-index solr in $apm_bundle
  migrations - Rerun the last migration in this dir (test and development)
  databases  - Drop, recreate, remigrate, and load fixtures of all APM DBs
  upgrade    - Upgrade this script in $SCRIPTDIR via git
  version    - Print the version number

You can set the location of your apm_bundle repo by adding a line like

echo \"export APM_BUNDLE=\$HOME/src/apm_bundle\" >> ${CONFFILE}

This script assumes you're using Homebrew on a Mac.

Website: https://github.com/justinforce/dang
"
  exit $return_code
}

function upgrade_self() {
  cd "$SCRIPTDIR"
  git checkout release
  git pull origin release
}

function enable_expert_mode() {
  ln -sf dang ~/bin/$(echo ZnVjawo= | base64 --decode)
}

function rollback_then_migrate() {
  local app="$1"; shift

  # cd to app if it's defined
  case "$app" in
    property)
      cd "$PROPERTY_DIR"
    ;;
  esac
  in_test_and_development rake db:migrate:redo &
  wait
}

function in_test_and_development() {
  for environment in test development; do
    RAILS_ENV=$environment $*
  done
}

function recreate_databases() {
  # XXX You have to do these tasks separately because race conditions arise,
  # such as reports not being able to find the users table to add a foreign key
  # >_<
  rake db:drop
  rake db:create
  rake db:migrate db:fixtures:load
}

function recreate_all_databases() {
  local dir
  for dir in "$APM_BUNDLE"/apps/* "$PROPERTY_DIR"/engines/*; do
    cd "$dir"
    [ -d db/migrate ] && in_test_and_development recreate_databases &
  done
  wait
}

function main() {
  local task="$1"; shift
  local args="$*"
  case "$task" in
    mysql)
      restart_with_launchctl \
        mysqld \
        homebrew.mxcl.mysql \
        "echo 'select count(*) from db' | mysql -uroot mysql"
      ;;
    selenium)
      restart_with_launchctl \
        selenium-server-standalone \
        homebrew.mxcl.selenium-server-standalone \
        'pgrep -f selenium-server-standalone'
      ;;
    solr)
      reindex_solr
      ;;
    help|-h|--help)
      print_help
      ;;
    version)
      echo $(version)
      ;;
    upgrade)
      upgrade_self
      ;;
    expert_mode)
      enable_expert_mode
      echo "Expert mode unlocked!"
      ;;
    migrations)
      rollback_then_migrate $args
      ;;
    databases)
      recreate_all_databases
      ;;
    *)
      echo "$CAPITALIZED_SCRIPT_NAME $task?! $CAPITALIZED_SCRIPT_NAME YOU, buddy!"
      echo "(Try $SCRIPT_NAME help)"
  esac
}

main $ARGS
